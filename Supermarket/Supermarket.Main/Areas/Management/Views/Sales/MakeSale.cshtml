@model Supermarket.Main.Areas.Management.Models.ProductOperationDetailsViewModel

@{
    ViewBag.Title = "New sale";
}

<h2>Make a new sale</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addProductToListForm" }))
{
    <div id="addProductInfo">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.DropDownList("Product", Model.AvailableProducts)

        @Html.LabelFor(model => model.Amount)
        @Html.EditorFor(model => model.Amount)
        @Html.ValidationMessageFor(model => model.Amount)

        <br />
        <input type="button" id="btnAddProductToList" value="Add to list" />
    </div>
}


<fieldset>
    <legend>Transactino details</legend>
    <table id="tblNewProducts">
        <thead>
            <tr>
                <td>Product name</td>
                <td>Product amount</td>
                <td>Price per unit</td>
                <td>Total</td>
            </tr>
        </thead>
        <tbody id="transactionList">
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2">
                    <input type="text" id="totalPriceForAll" value="0.00" disabled="disabled" />
                </td>
            </tr>
        </tfoot>
    </table>
    <p>
        <input id="submitTransaction" type="button" value="Make transaction" />
    </p>
</fieldset>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $("#btnAddProductToList").on("click", function () {
                if ($("#addProductToListForm").valid()) {
                    var productName = $("#Product").find(":selected").text();
                    var productId = $("#Product").find(":selected").val();
                    var amount = $("#@Html.IdFor(model => model.Amount)").val();
                    var pricePerUnit = getProductPrice(productId);
                    if (pricePerUnit != -1) {
                        $("#transactionList")
                            .append(
                            '<tr>'
                            + '<td>' + productName + '<input class="productId" type="hidden" value="' + productId + '" /></td>'
                            + '<td class="productAmount">' + amount + '</td>'
                            + '<td class="pricePerUnit">' + pricePerUnit + '</td>'
                            + '<td class="totalPrice">' + amount * pricePerUnit + '</td></tr>');
                        calculateTotal();
                    }
                }
            })
        });

        function calculateTotal() {
            var totalAmount = 0;
            $("#transactionList td.totalPrice").each(function () {
                totalAmount += Number($(this).text());
            });
            totalAmount = totalAmount.toFixed(2);
            $("#totalPriceForAll").val(totalAmount);
        }

        function getProductPrice(id) {
            var storePrice = -1;
            $.ajax({
                type: 'Get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                url: "@Url.Action("GetProductPrice")",
                data: { productId: id },
                traditional: true,
                async: false,
                success: function (jsonFromServer) {
                    storePrice = jsonFromServer.price;
                },
                error: function () {
                    alert("Unable to get the store price for the product!");
                }
            });
            return storePrice;
        }

        $(function () {
            var submitButton = $("#submitTransaction");
            submitButton.on("click", function () {
                submitButton.prop("disabled", true);
                var sales = [];
                $("#transactionList tr").each(function () {
                    var id = $(this).find(".productId").val();
                    var amount = $(this).find(".productAmount").text();
                    var pricePerUnit = $(this).find(".pricePerUnit").text();
                    var sale = {
                        ProductId: id,
                        Amount: amount,
                        PricePerUnit: pricePerUnit
                    };
                    sales.push(sale)
                });

                var verificationToken = $('#addProductInfo [name=__RequestVerificationToken]').val();
                var headers = {};
                headers['__RequestVerificationToken'] = verificationToken;
                $.ajax({
                    type: 'Post',
                    dataType: 'json',
                    headers: headers,
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("PerformSale")",
                    data: JSON.stringify(sales),
                    traditional: true,
                    success: function (result) {
                        if (result.success == false) {
                            alert(result.error);
                        } else {
                            alert(result.message);
                            window.location.replace("/Management/");
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("An error has occurred, please try again or inform an administrator!");
                    }
                });
                submitButton.prop("disabled", false);
            })
        });
    </script>
}


