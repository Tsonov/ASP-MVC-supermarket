@model IEnumerable<Supermarket.Main.Areas.Management.Models.ProductInStockViewModel>

@{
    ViewBag.Title = "Products in stock";
}
<h2>Products in stock at the moment</h2>

@(Html.Kendo().DropDownList()
    .Name("Category")
    .DataTextField("CategoryName")
    .DataValueField("CategoryId")
    .OptionLabel("All categories")
    .DataSource(source =>
    {
        source.Read("GetCategories", "Report");
    })
    .Events(e =>
        {
            e.Select("categorySelected");
        }
    )
)

@(Html.Kendo().Grid(Model)
    .Name("AvailableProducts")
    .Columns(columns =>
    {
        columns.Bound(m => m.ProductName);
        columns.Bound(m => m.CategoryName);
        columns.Bound(m => m.Amount);
        columns.Bound(m => m.PricePerUnit);
        columns.Bound(m => m.TotalPrice);
    })
    .Pageable()
    .Sortable()
    .Events(e =>
    {
        e.DataBound("calculateTotal");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .PageSize(15)
        .Read(read => read.Action("GetProductsInStock", "Report"))
        )
)

<div class="float-right">
<label for="totalForAll">Total available money in stock:</label>
<input type="text" id="totalForAll" value="0.00" disabled />

</div>

@section Scripts {
    <script>
        function categorySelected(e) {
            var selectedCat = this.dataItem(e.item.index());
            var categoryId = selectedCat.CategoryId;
            if (categoryId != "") {
                $.ajax({
                    type: "get",
                    dataType: "json",
                    url: "@Url.Action("GetProductsInStockForCategory")",
                    data: { categoryId: categoryId },
                    traditional: true,
                    success: function (result) {
                        var grid = $("#AvailableProducts").data("kendoGrid");
                        grid.dataSource.data(result);
                        calculateTotal();
                    },
                    error: function () {
                        alert("Unable to get prodcuts by stock");
                    }
                });
            } else {
                $.ajax({
                    type: "get",
                    dataType: "json",
                    url: "@Url.Action("GetProductsInStock")",
                    data: { categoryId: categoryId },
                    traditional: true,
                    success: function (result) {
                        var grid = $("#AvailableProducts").data("kendoGrid");
                        grid.dataSource.data(result);
                        calculateTotal();
                    },
                    error: function () {
                        alert("Unable to get prodcuts by stock");
                    }
                });
            }
        }

        function calculateTotal() {
            totalAmount = 0;
            var gridData = $("#AvailableProducts").data("kendoGrid").dataSource.data();
            if (gridData.length != 0) {
                $.each(gridData, function (i, row) {
                    totalAmount += Number(row.TotalPrice);
                });
            }
            totalAmount = totalAmount.toFixed(2);
            $("#totalForAll").val(totalAmount);
        }
    </script>
}
